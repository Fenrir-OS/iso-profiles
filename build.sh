#!/bin/bash -xe

# Warning: this script is not supposed to be run on real system,
# as it will not clean up after itself.
# Use it only in ephemeral environments, such as Travis CI.

CWD=$(realpath $(dirname $0))
BUILD_DIR="$CWD/build/$(date +%s)"
DOWNLOAD_DIR="$CWD/download"
ISO_DIR="$CWD/iso"
FENRIR_DIR="$CWD/fenrir"

mkdir -p $BUILD_DIR
mount --bind $BUILD_DIR $BUILD_DIR
pushd $BUILD_DIR

ln -s ${DOWNLOAD_DIR}/* .

mkdir isofs
mount -t iso9660 -o loop,ro artix.iso isofs
unsquashfs -f -d livefs ./isofs/LiveOS/rootfs.img

mount --bind livefs livefs

pushd livefs
mount -t proc /proc proc/
mount -t sysfs /sys sys/
mount --bind /dev dev/
mount --bind /run run/
mount -t tmpfs /tmp tmp/
mount --bind /etc/resolv.conf etc/resolv.conf
popd

mkdir rootfs
mount --bind rootfs rootfs
mount --bind rootfs livefs/mnt

cat <<EOF | chroot livefs /bin/bash -xe -
pacman-key --init
pacman-key --populate
pacman -Sy artix-keyring artools iso-profiles --noconfirm
basestrap -G -M -c /mnt base base-devel ${EXTRA_PKGS}
basestrap /mnt linux-lts linux-firmware
fstabgen -U /mnt >> /mnt/etc/fstab
pacman -Syu --disable-download-timeout
EOF

echo "LANG=en_US.UTF-8" >> rootfs/etc/locale.conf
sed -i -e "s/#en_US.UTF-8/en_US.UTF-8/" rootfs/etc/locale.gen
sed -i -e "s/#IgnorePkg   =/IgnorePkg   = fakeroot/" rootfs/etc/pacman.conf
cp fakeroot-tcp.pkg glibc-linux4.pkg rootfs/

cat <<EOF | chroot livefs artix-chroot /mnt /bin/bash -xe -
locale-gen
yes | pacman -U /fakeroot-tcp.pkg /glibc-linux4.pkg
pacman-key --init
pacman-key --populate
pacman -Sy artools iso-profiles git grub --noconfirm
mkdir -p /home/artools-workspace
mkdir -p ~/artools-workspace
ln -s ~/artools-workspace /home/artools-workspace
buildiso -p base -q
EOF

pushd livefs
mkdir -p /usr/share/artools/iso-profiles
mkdir -p /home/artools-workspace/iso

cp -r ${FENRIR_DIR} /usr/share/artools/iso-profiles
cp -r ${FENRIR_DIR} /home/artools-workspace/iso
cp -r ${ISO_DIR} /home/artools-workspace

mkdir -p ./mnt/usr/share/artools/iso-profiles
mkdir -p ./mnt//home/artools-workspace/iso
mkdir -p ./mnt/home/artools-workspace
cp -r ${FENRIR_DIR} ./mnt/usr/share/artools/iso-profiles
cp -r ${FENRIR_DIR} ./mnt//home/artools-workspace/iso
cp -r ${ISO_DIR} ./mnt/home/artools-workspace

chmod -R 777 ${FENRIR_DIR}
chmod -R 777 ${ISO_DIR}

# cp -R ${FENRIR_DIR}/* /usr/share/artools/iso-profiles/fenrir
# cp -R ${ISO_DIR} /home/artools-workspace/iso/fenrir

popd

cat <<EOF | chroot livefs artix-chroot /mnt /bin/bash -xe -
echo 'Build iso fenrir'
buildiso -p fenrir -i runit
echo 'Build iso base'
buildiso -p base -i runit
echo 'BuildISO script'
chmod 777 buildISOs.sh
bash buildISOs.sh -p fenrir -i runit
EOF

cat <<EOF > rootfs/etc/resolv.conf
# This file was automatically generated by WSL. \
To stop automatic generation of this file, remove this line."
EOF

rm -f rootfs/fakeroot-tcp.pkg rootfs/glibc-linux4.pkg

pushd livefs
mkdir -p ${ISO_DIR}/fenrir1
mkdir -p ${ISO_DIR}/fenrir2
cp -r /usr/share/artools/iso-profiles ${ISO_DIR}/fenrir1
cp -r /home/artools-workspace/iso ${ISO_DIR}/fenrir2
cp -r /home/artools-workspace ${ISO_DIR}

mkdir -p ${ISO_DIR}/fenrir3
mkdir -p ${ISO_DIR}/fenrir4
mkdir -p ${ISO_DIR}/fenrir5
mkdir -p ${ISO_DIR}/mnt
cp -r ./mnt/usr/share/artools/iso-profiles ${ISO_DIR}/fenrir3
cp -r ./mnt//home/artools-workspace/iso ${ISO_DIR}/fenrir4
cp -r ./mnt/home/artools-workspace ${ISO_DIR}/fenrir5
popd